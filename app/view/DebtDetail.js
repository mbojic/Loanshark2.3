/*
 * File: app/view/DebtDetail.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Payback.view.DebtDetail', {
    extend: 'Ext.form.Panel',
    alias: 'widget.DebtDetail',

    requires: [
        'Ext.TitleBar',
        'Ext.Button',
        'Ext.Label',
        'Ext.form.FieldSet',
        'Ext.field.DatePicker',
        'Ext.picker.Date',
        'Ext.field.Number',
        'Ext.dataview.DataView',
        'Ext.Toolbar',
        'Ext.Spacer'
    ],

    config: {
        hidden: true,
        id: 'DebtDetail',
        autoDestroy: false,
        layout: 'vbox',
        hideAnimation: {
            type: 'slideOut',
            direction: 'right'
        },
        showAnimation: {
            type: 'slide',
            direction: 'left'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                ui: 'light',
                title: 'Debt Details',
                items: [
                    {
                        xtype: 'button',
                        id: 'cancelDebt',
                        iconCls: 'icon-back'
                    },
                    {
                        xtype: 'button',
                        align: 'right',
                        id: 'emailDebt',
                        iconCls: 'icon-email'
                    }
                ]
            },
            {
                xtype: 'label',
                cls: 'loanshark-header-label',
                height: 100,
                id: 'debtHeaderLabel'
            },
            {
                xtype: 'button',
                cls: 'loanshark-add-button',
                id: 'addPayment',
                text: 'Add Payment'
            },
            {
                xtype: 'fieldset',
                items: [
                    {
                        xtype: 'selectfield',
                        itemId: 'preySelectField',
                        label: 'Prey',
                        labelAlign: 'top',
                        name: 'person_id',
                        displayField: 'name',
                        store: 'PeopleStore',
                        valueField: 'id'
                    },
                    {
                        xtype: 'datepickerfield',
                        label: 'Date',
                        labelAlign: 'top',
                        name: 'date',
                        value: {
                            day: new Date().getDate(),
                            month: new Date().getMonth(),
                            year: new Date().getFullYear()
                        }
                    },
                    {
                        xtype: 'numberfield',
                        label: 'Original Loan Amount',
                        labelAlign: 'top',
                        name: 'amount'
                    },
                    {
                        xtype: 'textfield',
                        label: 'Reason',
                        labelAlign: 'top',
                        name: 'reason'
                    }
                ]
            },
            {
                xtype: 'label',
                html: 'Payments Made',
                itemId: 'paymentHistoryLabel'
            },
            {
                xtype: 'dataview',
                itemId: 'paymentDataView',
                minHeight: 64,
                padding: '4 0 4 0',
                scrollable: false,
                defaultType: 'PaymentListItem',
                emptyText: 'No Payments',
                store: 'PaymentStore',
                useComponents: true
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                items: [
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'button',
                        id: 'saveDebt',
                        iconCls: 'icon-save'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onPaymentDataViewRefresh',
                event: 'refresh',
                delegate: '#paymentDataView'
            }
        ]
    },

    onPaymentDataViewRefresh: function(dataview, eOpts) {
        var nrItems = Ext.getStore('PaymentStore').getCount();
        if (nrItems > 0) {
            dataview.setHeight(nrItems*64 + 8);
        } else {
            dataview.setHeight(64);
        }
    },

    updateDebtHeaderLabel: function() {
        //update balance of the debt
        var record = this.getRecord(),
            totalBalanceString,
            subTitle;
        if (record) {
            subTitle = "Owed by " + Ext.getStore('PeopleStore').getById(record.get('person_id')).get('name');
            if (record.get('balance') === 0) {
                totalBalanceString = 'Paid Off';
            } else {
                totalBalanceString = '$ ' + ((record.get('balance')<0)?'-':'') + record.get('balance').toFixed(2);
            }
            this.down('#debtHeaderLabel').setHtml(
                "<span class='title'>" + totalBalanceString + "</span>" +
                "<span class='sub-title'>" + subTitle + "</span>"
                );
        }
    },

    setTransition: function() {
        //sets the animation direction to follow clickthrough to paymentDetail correctly
        this.setHideAnimation({
            type: 'slideOut',
            direction: 'left'
        });
        this.setShowAnimation({
            type: 'slide',
            direction: 'right'
        });
    },

    resetTransition: function() {
        //sets the animation direction to follow clickthrough to paymentDetail correctly
        this.setHideAnimation({
            type: 'slideOut',
            direction: 'right'
        });
        this.setShowAnimation({
            type: 'slide',
            direction: 'left'
        });
    }

});
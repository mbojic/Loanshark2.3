/*
 * File: app/view/ContactListItem.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Payback.view.ContactListItem', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.ContactListItem',

    requires: [
        'Ext.Container',
        'Ext.XTemplate',
        'Ext.Button'
    ],

    config: {
        height: 64,
        layout: 'hbox',
        items: [
            {
                xtype: 'container',
                flex: 1,
                cls: 'loanshark-item-container',
                itemId: 'contactListItemDetail',
                tpl: [
                    '<div class="contact-list-item-detail">',
                    '    <div class="contact-name">',
                    '        {name}',
                    '    </div>',
                    '    <div class="contact-balance">',
                    '        {[(values.balance <= 0)?\'No Debts\':(\'$ \' + values.balance.toFixed(2))]}',
                    '    </div>',
                    '</div>'
                ],
                items: [
                    {
                        xtype: 'button',
                        cls: 'loanshark-item-delete-button',
                        docked: 'right',
                        hidden: true,
                        hideAnimation: 'popOut',
                        itemId: 'deleteContact',
                        showAnimation: 'pop',
                        text: 'Delete Contact'
                    }
                ]
            }
        ]
    },

    updateRecord: function(record) {
        var contactDetail = this.child('#contactListItemDetail');
        var deleteContactButton = contactDetail.child('#deleteContact');
        //put the data in the tpl
        contactDetail.setData(record.data);
        //add record reference to the button
        deleteContactButton.setData(record);
    },

    showDeleteButton: function() {
        this.down('button#deleteContact').show();
    },

    hideDeleteButton: function() {
        this.down('button#deleteContact').hide();
    }

});
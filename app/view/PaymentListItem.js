/*
 * File: app/view/PaymentListItem.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Payback.view.PaymentListItem', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.PaymentListItem',

    requires: [
        'Ext.Container',
        'Ext.XTemplate',
        'Ext.Button'
    ],

    config: {
        height: 64,
        layout: 'hbox',
        items: [
            {
                xtype: 'container',
                flex: 1,
                cls: 'loanshark-item-container',
                itemId: 'paymentListItemDetail',
                tpl: [
                    '<div class="payment-list-item-detail">',
                    '    <div class="payment-amount">',
                    '        $ {[values.amount.toFixed(2)]}',
                    '    </div>',
                    '    <div class="payment-date">',
                    '        Paid on {[(values.date.getMonth()+1) + \'/\' + values.date.getDate() + \'/\' + values.date.getFullYear()]}',
                    '    </div>',
                    '</div>'
                ],
                items: [
                    {
                        xtype: 'button',
                        cls: 'loanshark-item-delete-button',
                        docked: 'right',
                        hidden: true,
                        hideAnimation: 'popOut',
                        itemId: 'deletePayment',
                        showAnimation: 'pop',
                        iconCls: 'icon-delete'
                    }
                ]
            }
        ]
    },

    updateRecord: function(record) {
        var paymentDetail = this.child('#paymentListItemDetail');
        var deletePaymentButton = paymentDetail.child('#deletePayment');
        //put the data in the tpl
        paymentDetail.setData(record.data);
        //add record reference to the button
        deletePaymentButton.setData(record);
    },

    showDeleteButton: function() {
        this.down('button#deletePayment').show();
    },

    hideDeleteButton: function() {
        this.down('button#deletePayment').hide();
    }

});
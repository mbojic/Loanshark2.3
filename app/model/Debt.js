/*
 * File: app/model/Debt.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Payback.model.Debt', {
    extend: 'Ext.data.Model',
    alias: 'model.Debt',

    requires: [
        'Ext.data.Field',
        'Ext.data.proxy.LocalStorage'
    ],

    config: {
        identifier: {
            type: 'uuid'
        },
        fields: [
            {
                name: 'id',
                type: 'auto'
            },
            {
                name: 'reason',
                type: 'string'
            },
            {
                name: 'amount',
                type: 'float'
            },
            {
                defaultValue: 0,
                name: 'balance',
                type: 'float'
            },
            {
                name: 'date',
                type: 'date'
            },
            {
                name: 'person_id',
                type: 'auto'
            }
        ],
        proxy: {
            type: 'localstorage',
            id: 'Debts'
        }
    },

    calcBalance: function() {
        //the balance is debt amount minus all the payments that have been made so far
        var debtAmount = this.get('amount'),
            paymentStore = Ext.getStore('PaymentStore'),
            payments;

        paymentStore.clearFilter();
        paymentStore.filter('debt_id',this.get('id'));

        payments = paymentStore.sum('amount');

        paymentStore.clearFilter();

        //round to 2 decimals and return
        this.set('balance', (debtAmount - payments).toFixed(2));
    },

    cascadeDelete: function() {
        var paymentStore = Ext.getStore('PaymentStore');

        paymentStore.clearFilter();
        paymentStore.filter('debt_id',this.get('id'));

        paymentStore.each(function(payment){
            payment.erase();
        });

        paymentStore.clearFilter();
        this.erase();

    }

});